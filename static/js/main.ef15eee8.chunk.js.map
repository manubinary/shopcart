{"version":3,"sources":["components/Home.js","reportWebVitals.js","index.js"],"names":["Home","useState","itemsList","setItemsList","selectedProducts","setSelectedProducts","useEffect","fetch","then","response","json","responseJson","length","available","quantity","eval","toLowerCase","lowOnStock","removed","checked","catch","error","console","handleSelection","event","productId","dataList","productIds","i","push","index","indexOf","splice","handleRemoveItems","getList","list","forEach","item","md","xs","lg","sm","className","src","imageUrl","alt","size","tickAnimationDuration","color","onChange","promotionBadge","name","price","priceWas","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.ef15eee8.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './Home.css';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Checkbox from 'react-simple-checkbox';\r\n\r\nfunction Home() {\r\n  const [itemsList, setItemsList] = useState([]);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n\r\n  useEffect(()=> {\r\n    return fetch('https://run.mocky.io/v3/fca7ef93-8d86-4574-9a4a-3900d91a283e')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          let length = responseJson.length;\r\n          while ( length --> 0 ) {\r\n              responseJson[ length ].available = responseJson[ length ].quantity === 0 ? false : eval(responseJson[ length ].available.toLowerCase());\r\n              responseJson[ length ].lowOnStock = (responseJson[ length ].quantity > 0 && responseJson[ length ].quantity < 10) ? true : eval(responseJson[ length ].lowOnStock.toLowerCase());\r\n              responseJson[ length ].removed = false;\r\n              responseJson[ length ].checked = false;\r\n          }\r\n          setItemsList(responseJson);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSelection = (event, productId) => {\r\n    const dataList = [...itemsList];\r\n    const productIds = [...selectedProducts]\r\n    for (var i = 0; i < dataList.length; i++) {\r\n      if (dataList[i].productId === productId) {\r\n        dataList[i].checked = !dataList[i].checked;\r\n        if (!dataList[i].checked) {\r\n          let index = productIds.indexOf(productId);\r\n          if (index !== -1) {\r\n            productIds.splice(index, 1);\r\n          }\r\n        } else {\r\n          productIds.push(productId);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    setItemsList(dataList);\r\n    setSelectedProducts(productIds);\r\n  };\r\n\r\n  const handleRemoveItems = () => {\r\n    const dataList = [...itemsList];\r\n    for (var i = 0; i < dataList.length; i++) {\r\n      if (dataList[i].checked ) {\r\n        dataList[i].removed = true;\r\n      }\r\n    }\r\n    setItemsList(dataList);\r\n    setSelectedProducts([]);\r\n  };\r\n\r\n  const getList = () => {\r\n    const list = [];\r\n    itemsList.forEach((item) => {\r\n      !item.removed && list.push(\r\n        <Col md={3} xs={3} lg={3} sm={3} className=\"itemContainer\" key={item.productId}>\r\n          <div className=\"item\">\r\n            <img className=\"image\" src={item.imageUrl} alt=\"new\" />\r\n            <Checkbox className=\"selectionCheck\" checked={item.checked} size={2} tickAnimationDuration={100} color='#9484da' onChange={(event)=>handleSelection(event, item.productId)} ></Checkbox>\r\n            {item.promotionBadge && <div className=\"promotion\">{item.promotionBadge}</div>}\r\n            <div className=\"name\">{item.name}</div>\r\n            <div><span className=\"price\">£{item.price}</span>&nbsp;&nbsp;<span className=\"oldPrice\">£<s>{item.priceWas}</s></span></div>\r\n            {(item.lowOnStock && item.available) && <div className=\"lowOnStock\">Limited Stock!</div>}\r\n            {item.available && <div className=\"inStock\">{item.quantity} in stock</div>}\r\n            {!item.available && <div className=\"outOfStock\">Out of stock</div>}\r\n          </div>\r\n        </Col>);\r\n    });\r\n    return(list);\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"mainHome\">\r\n      <Row className=\"mainHeader\">\r\n        <Col className=\"header\">\r\n          <h1>Your Cart</h1>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"mainContent\">\r\n        {selectedProducts.length > 0 && <div className=\"buttonContainer\" onClick={() => handleRemoveItems() }>\r\n          Remove {selectedProducts.length} Selected Product{selectedProducts.length > 1 ? 's': '' }\r\n        </div>}\r\n        <Row className=\"contentList\"> {getList()} </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router , Route, Switch} from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}